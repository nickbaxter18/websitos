name: Backend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'api/**'
      - 'backend/**'
      - 'v2/**'
      - 'src/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'api/**'
      - 'backend/**'
      - 'v2/**'
      - 'src/**'
      - '.github/workflows/backend-ci.yml'
  workflow_dispatch:

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        task: [black, mypy, pytest]
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-json-report mypy black

      - name: Enable problem matchers
        uses: ./.github/actions/setup-matchers

      - name: Run ${{ matrix.task }}
        run: |
          if [ "${{ matrix.task }}" == "black" ]; then black --check . --exclude '(Lib|venv|node_modules)'; fi
          if [ "${{ matrix.task }}" == "mypy" ]; then mypy . --exclude '(Lib|venv|node_modules)'; fi
          if [ "${{ matrix.task }}" == "pytest" ]; then pytest -vv --maxfail=1 --disable-warnings --json-report --json-report-file=pytest-report.json; fi
        continue-on-error: ${{ matrix.task == 'black' }}

      - name: Upload pytest results artifact
        if: always() && matrix.task == 'pytest'
        uses: actions/upload-artifact@v4
        with:
          name: backend-pytest-results
          path: pytest-report.json
          retention-days: 7

  capture-failure:
    if: always()
    needs: [checks]
    uses: ./.github/workflows/failure-summary.yml
    with:
      job_name: backend
      step_name: checks