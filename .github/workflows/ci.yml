name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [node, python]

    steps:
      - uses: actions/checkout@v4

      # ----------------------
      # Node.js (WebsiteOS)
      # ----------------------
      - name: Setup Node.js
        if: matrix.language == 'node'
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install Node deps
        if: matrix.language == 'node'
        run: npm ci
        env:
          HUSKY: 0

      - name: Type-check (TS)
        if: matrix.language == 'node'
        run: npx tsc --noEmit

      - name: Lint (ESLint via npx)
        if: matrix.language == 'node'
        run: npx eslint . --ext .ts,.tsx

      - name: Prettier check
        if: matrix.language == 'node'
        run: npx prettier --check .

      - name: Run Jest with coverage + JSON report
        if: matrix.language == 'node'
        run: npx jest --json --outputFile=jest-report.json --coverage --coverageReporters=json-summary --coverageReporters=lcov

      - name: Upload Jest artifacts
        if: matrix.language == 'node'
        uses: actions/upload-artifact@v4
        with:
          name: jest-artifacts
          path: |
            jest-report.json
            coverage/

      # ----------------------
      # Python (FastAPI backend)
      # ----------------------
      - name: Setup Python
        if: matrix.language == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Python deps
        if: matrix.language == 'python'
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-json-report pytest-cov

      - name: Run pytest with coverage + JSON report
        if: matrix.language == 'python'
        run: PYTHONPATH=. pytest --maxfail=1 --disable-warnings -q \
              --json-report --json-report-file=pytest-report.json \
              --cov=. --cov-report=xml

      - name: Upload pytest artifacts
        if: matrix.language == 'python'
        uses: actions/upload-artifact@v4
        with:
          name: pytest-artifacts
          path: |
            pytest-report.json
            coverage.xml
