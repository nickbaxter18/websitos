name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [node, python]

    steps:
      - uses: actions/checkout@v4

      # ----------------------
      # Node.js (WebsiteOS V2)
      # ----------------------
      - name: Setup Node.js
        if: matrix.language == 'node'
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install Node deps
        if: matrix.language == 'node'
        run: npm install
        env:
          HUSKY: 0

      - name: Type-check (TS)
        if: matrix.language == 'node'
        run: npm run type-check

      - name: Lint (ESLint)
        if: matrix.language == 'node'
        run: npm run lint

      - name: Prettier check
        if: matrix.language == 'node'
        run: npm run format:check

      - name: Run Jest with coverage + JSON report
        if: matrix.language == 'node'
        run: npx jest --json --outputFile=jest-report.json --coverage --coverageReporters=json-summary --coverageReporters=lcov

      - name: Upload Jest test report
        if: matrix.language == 'node'
        uses: actions/upload-artifact@v4
        with:
          name: jest-report
          path: jest-report.json

      - name: Upload Jest coverage
        if: matrix.language == 'node'
        uses: actions/upload-artifact@v4
        with:
          name: jest-coverage
          path: |
            coverage/
            coverage/lcov.info
            coverage/coverage-summary.json

      - name: Verify log files exist
        if: matrix.language == 'node'
        run: |
          required_files=(
            "docs/meta/health.md"
            "docs/meta/lineage.md"
            "docs/meta/myth_cycles.md"
            "docs/meta/reconciliations.md"
            "docs/meta/archetypes.md"
            "docs/meta/bias.md"
            "docs/meta/drag.md"
            "docs/meta/translations.log"
            "docs/meta/gardening/phase1.md"
            "docs/meta/gardening/phase6.md"
            "docs/meta/archive/history/README.md"
            "docs/meta/myth_library.md"
          )
          missing=false
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "❌ Missing required log file: $file"
              missing=true
            else
              echo "✅ Found $file"
            fi
          done
          if [ "$missing" = true ]; then
            echo "One or more required log files are missing."
            exit 1
          fi

      # ----------------------
      # Python (FastAPI Backend)
      # ----------------------
      - name: Setup Python
        if: matrix.language == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Python deps
        if: matrix.language == 'python'
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-json-report pytest-cov

      - name: Run pytest with coverage + JSON report
        if: matrix.language == 'python'
        run: pytest --json-report --json-report-file=pytest-report.json --cov=.

      - name: Upload pytest test report
        if: matrix.language == 'python'
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: pytest-report.json

      - name: Upload pytest coverage
        if: matrix.language == 'python'
        uses: actions/upload-artifact@v4
        with:
          name: pytest-coverage
          path: .coverage
