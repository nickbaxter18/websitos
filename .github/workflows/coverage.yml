name: Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Debug workspace
        run: |
          echo "Current directory: $(pwd)"
          ls -R | head -50

      - name: Detect frontend directory
        id: detect-frontend
        run: |
          if [ -f package.json ]; then
            echo "found-root=true" >> $GITHUB_OUTPUT
          elif [ -f frontend/package.json ]; then
            echo "found-frontend=true" >> $GITHUB_OUTPUT
          else
            echo "no-frontend=true" >> $GITHUB_OUTPUT
          fi

      - name: Install frontend dependencies (if found)
        run: |
          if [ "${{ steps.detect-frontend.outputs.found-root }}" == "true" ]; then
            npm ci
          elif [ "${{ steps.detect-frontend.outputs.found-frontend }}" == "true" ]; then
            cd frontend && npm ci
          else
            echo "No frontend found"
          fi

      - name: Run frontend coverage (Jest, optional)
        run: |
          if [ "${{ steps.detect-frontend.outputs.found-root }}" == "true" ]; then
            npm run test:ci || npm test || true
          elif [ "${{ steps.detect-frontend.outputs.found-frontend }}" == "true" ]; then
            cd frontend
            npm run test:ci || npm test || true
          else
            echo "No frontend tests"
          fi

      - name: Install backend dependencies (if exists)
        run: |
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip install pytest pytest-cov
          else
            echo "No backend requirements.txt found"
          fi

      - name: Run backend coverage (Pytest, optional)
        run: |
          if [ -f requirements.txt ]; then pytest --cov=api --cov-report=xml --maxfail=1 --disable-warnings || true; else echo "No backend tests"; fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json,./coverage.xml
          fail_ci_if_error: false