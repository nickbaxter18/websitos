name: Coverage

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'api/**'
      - '.github/workflows/coverage.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'api/**'
      - '.github/workflows/coverage.yml'
  workflow_dispatch:

jobs:
  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: true
      matrix:
        task: [frontend, backend]
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js (for frontend)
        if: matrix.task == 'frontend'
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Setup Python (for backend)
        if: matrix.task == 'backend'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install frontend dependencies
        if: matrix.task == 'frontend'
        run: npm ci

      - name: Install backend dependencies
        if: matrix.task == 'backend'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Enable problem matchers
        uses: ./.github/actions/setup-matchers

      - name: Run frontend coverage (Jest)
        if: matrix.task == 'frontend'
        run: npm run test:ci -- --coverage || true

      - name: Run backend coverage (Pytest)
        if: matrix.task == 'backend'
        run: pytest --cov=api --cov-report=xml --maxfail=1 --disable-warnings || true

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.task }}
          path: |
            coverage
            coverage.xml
            coverage/coverage-final.json
          retention-days: 7

  upload-codecov:
    needs: coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json,./coverage.xml
          fail_ci_if_error: false