name: Coverage

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'v2/**'
      - 'api/**'
      - 'requirements.txt'
      - 'package.json'
      - '.github/workflows/coverage.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'v2/**'
      - 'api/**'
      - 'requirements.txt'
      - 'package.json'
      - '.github/workflows/coverage.yml'
  workflow_dispatch:

jobs:
  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: true
      matrix:
        task: [frontend, backend]
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js (for frontend)
        if: matrix.task == 'frontend'
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Setup Python (for backend)
        if: matrix.task == 'backend'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install frontend dependencies
        if: matrix.task == 'frontend'
        run: npm ci

      - name: Install backend dependencies
        if: matrix.task == 'backend'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Enable problem matchers
        uses: ./.github/actions/setup-matchers

      - name: Run frontend coverage (Jest)
        if: matrix.task == 'frontend'
        run: npm run test:ci -- --coverage

      - name: Run backend coverage (Pytest)
        if: matrix.task == 'backend'
        run: |
          echo "ðŸ”Ž Running pytest with coverage..."
          pytest --cov=api --cov-report=xml --maxfail=1 --disable-warnings || EXIT=$?
          echo "--- Listing current directory ---"
          ls -la . || true
          echo "--- Listing coverage outputs ---"
          ls -la coverage* || true
          exit ${EXIT:-0}

      - name: Upload frontend coverage
        if: matrix.task == 'frontend'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-frontend
          path: coverage/lcov.info
          retention-days: 1

      - name: Upload backend coverage
        if: matrix.task == 'backend'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-backend
          path: coverage.xml
          retention-days: 1

  upload-codecov:
    needs: coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info,./coverage.xml
          fail_ci_if_error: false