name: U-DIG IT Repo Sync

on:
  push:
    branches: [ main ]

jobs:
  sync:
    runs-on: ubuntu-latest
    environment: Websitos
    permissions:
      contents: read
    steps:
      - name: Checkout repository (debug only)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify EDITOR_API_KEY presence
        run: |
          echo ">>> Checking EDITOR_API_KEY secret"
          if [ -z "${{ secrets.EDITOR_API_KEY }}" ]; then
            echo "::error file=.github/workflows/udigit-sync.yaml::EDITOR_API_KEY not available"
            exit 1
          else
            echo "✅ EDITOR_API_KEY is available (masked)"
            echo "Length: ${#EDITOR_API_KEY}" # safe, does not reveal value
          fi
        env:
          EDITOR_API_KEY: ${{ secrets.EDITOR_API_KEY }}

      - name: Probe ingest API endpoint
        continue-on-error: false
        env:
          INGEST_API_URL: https://websitos2.onrender.com/ingest_file
        run: |
          echo "🔎 Probing ingest API..."
          STATUS=000
          for i in 1 2 3; do
            STATUS=$(curl -s --fail --connect-timeout 10 --max-time 60 -o /dev/null -w "%{http_code}" "$INGEST_API_URL" || echo "000")
            echo "Probe returned status: $STATUS"
            if [ "$STATUS" -eq 200 ]; then
              echo "✅ Ingest API reachable"
              break
            fi
            echo "⚠️ Ingest API not reachable (status $STATUS). Retrying..."
            sleep $((5 * i))
          done
          if [ "$STATUS" -ne 200 ]; then
            echo "::error file=.github/workflows/udigit-sync.yaml::Sync aborted – API unreachable (status $STATUS)"
            exit 1
          fi

      - name: Download repo archive
        run: |
          echo ">>> Downloading repo archive"
          curl -s --fail --connect-timeout 10 --max-time 60 -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/zipball/${{ github.sha }} \
            -o repo.zip || { echo "::error::Failed to download repo archive"; exit 1; }
          unzip repo.zip -d repo
          mv repo/* repo_extracted || true
          ls -la

      - name: Zip repo snapshot (excluding sensitive files)
        run: |
          echo ">>> Creating repo snapshot"
          zip -r repo-snapshot.zip repo_extracted \
            -x "*.git*" \
            -x ".env*" \
            -x "node_modules/*" \
            -x "venv/*" \
            -x "__pycache__/*"

      - name: Upload snapshot to U-DIG IT ingest API (with debug)
        continue-on-error: false
        env:
          INGEST_API_URL: https://websitos2.onrender.com/ingest_file
        run: |
          echo ">>> Uploading snapshot to ingest API"
          RESPONSE=$(curl -s --fail --connect-timeout 10 --max-time 60 -v -o response.txt -w "%{http_code}" -X POST "$INGEST_API_URL" \
            -H "x-api-key: ${{ secrets.EDITOR_API_KEY }}" \
            -F "file=@repo-snapshot.zip" || echo "000")

          echo "--- HTTP Status Code ---"
          echo "$RESPONSE"
          echo "--- HTTP Response Body ---"
          cat response.txt || echo "(no body)"

          if [ "$RESPONSE" -ne 200 ]; then
            echo "::error file=.github/workflows/udigit-sync.yaml::Ingest failed – API returned $RESPONSE"
            exit 1
          else
            echo "✅ Sync successful"
          fi

      - name: Upload sync logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sync-logs
          path: |
            response.txt
            repo-snapshot.zip
            *.log
          retention-days: 14