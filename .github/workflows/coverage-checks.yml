name: Coverage Checks

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        task: [frontend, backend, backend-node, e2e]
    defaults:
      run:
        working-directory: .
    env:
      NODE_OPTIONS: "--experimental-vm-modules"
      LOGS_API_TOKEN: ${{ secrets.LOGS_API_TOKEN }}
    steps:
      - name: Checkout repository (robust)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          clean: true
          lfs: false
          submodules: false

      - name: Setup Node.js (for frontend/e2e/backend-node)
        if: ${{ matrix.task != 'backend' }}
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Setup pnpm (for frontend/e2e/backend-node)
        if: ${{ matrix.task == 'frontend' || matrix.task == 'e2e' || matrix.task == 'backend-node' }}
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Ensure pnpm store exists
        if: ${{ matrix.task == 'frontend' || matrix.task == 'e2e' || matrix.task == 'backend-node' }}
        run: mkdir -p ~/.pnpm-store

      - name: Cache pnpm store
        if: ${{ matrix.task == 'frontend' || matrix.task == 'e2e' || matrix.task == 'backend-node' }}
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ matrix.task }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-${{ matrix.task }}-
            ${{ runner.os }}-pnpm-

      - name: Setup Python (for backend)
        if: ${{ matrix.task == 'backend' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip wheels (for backend)
        if: ${{ matrix.task == 'backend' }}
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-backend-${{ hashFiles('**/requirements.txt') }}-v1
          restore-keys: |
            ${{ runner.os }}-pip-backend-

      - name: Provide env file for validation
        run: cp .env.ci .env.example

      - name: Install frontend dependencies (with retry)
        if: ${{ matrix.task == 'frontend' }}
        run: |
          for i in 1 2 3; do
            pnpm install --frozen-lockfile --prefer-offline && break || (echo "❌ pnpm install failed, retrying..." && sleep 10)
          done

      - name: Install backend dependencies (Python)
        if: ${{ matrix.task == 'backend' }}
        run: |
          python -m pip install --upgrade pip
          for i in 1 2 3; do
            pip install --prefer-binary -r requirements.txt && break || (echo "❌ pip install failed, retrying..." && sleep 10)
          done

      - name: Ensure nyc installed (backend)
        if: ${{ matrix.task == 'backend' }}
        run: npm install -g nyc

      - name: Run frontend coverage (Jest)
        if: ${{ matrix.task == 'frontend' }}
        run: |
          mkdir -p coverage/frontend logs
          pnpm jest --config jest.config.cjs --coverage --all --passWithNoTests=false \
            --coverageReporters=lcov --coverageReporters=json-summary --coverageReporters=cobertura \
            --coverageDirectory=coverage/frontend 2>&1 | tee logs/frontend.log || true
          node scripts/convert-jest-coverage.js coverage/frontend/coverage-summary.json frontend-coverage-report.json

      - name: Upload frontend coverage summary
        if: ${{ always() && matrix.task == 'frontend' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-frontend-report
          path: frontend-coverage-report.json
          retention-days: 14

      - name: Run backend coverage (Pytest)
        if: ${{ matrix.task == 'backend' }}
        run: |
          mkdir -p coverage/backend logs
          pytest backend/tests --maxfail=1 --disable-warnings -q \
            --cov=./backend --cov-branch --cov-append \
            --cov-report=xml:coverage/backend/coverage.xml \
            --cov-report=json:coverage/backend/coverage-summary.json || true
          python scripts/convert-cobertura.py coverage/backend/coverage.xml backend-cobertura-report.json
          python scripts/convert-pytest-coverage.py coverage/backend/coverage-summary.json backend-coverage-report.json

      - name: Upload backend coverage summaries
        if: ${{ always() && matrix.task == 'backend' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-backend-report
          path: |
            backend-cobertura-report.json
            backend-coverage-report.json
          retention-days: 14

      - name: Run backend-node coverage (Jest)
        if: ${{ matrix.task == 'backend-node' }}
        run: |
          mkdir -p backend/coverage logs
          cd backend
          pnpm install --frozen-lockfile || true
          pnpm exec jest --config jest.config.cjs --coverage --coverageReporters=json-summary --coverageDirectory=coverage || true
          cd ..
          node scripts/convert-jest-coverage.js backend/coverage/coverage-summary.json backend-node-coverage-report.json

      - name: Upload backend-node coverage summary
        if: ${{ always() && matrix.task == 'backend-node' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-backend-node-report
          path: backend-node-coverage-report.json
          retention-days: 14

      - name: Run e2e coverage (Playwright)
        if: ${{ matrix.task == 'e2e' }}
        run: |
          mkdir -p coverage/e2e logs
          pnpm install --frozen-lockfile || true
          pnpm exec playwright install chromium
          VITE_COVERAGE=true NODE_ENV=test pnpm vite build --config vite.config.ts || true
          pnpm exec playwright test --reporter=list || true
          npx nyc report --reporter=json-summary --report-dir=coverage/e2e || true
          node scripts/convert-jest-coverage.js coverage/e2e/coverage-summary.json e2e-coverage-report.json

      - name: Upload e2e coverage summary
        if: ${{ always() && matrix.task == 'e2e' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-e2e-report
          path: e2e-coverage-report.json
          retention-days: 14

  call-diagnostics:
    needs: coverage
    uses: ./.github/workflows/ci-diagnostics.yml
    secrets: inherit