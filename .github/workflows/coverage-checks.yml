name: Coverage Checks

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        task: [frontend, backend, e2e]
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout repository (robust)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false
          clean: true

      - name: Retry fetch tags if needed
        run: |
          for i in 1 2 3; do
            git fetch --prune --tags --verbose && break || sleep 10
          done

      - name: Enable problem matchers
        run: |
          echo "::add-matcher::.github/matchers/error.json"
          echo "::add-matcher::.github/matchers/python.json"
          echo "::add-matcher::.github/matchers/ts.json"

      - name: Setup Node.js (for frontend/e2e)
        if: ${{ matrix.task != 'backend' }}
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Setup pnpm (for frontend/e2e)
        if: ${{ matrix.task != 'backend' }}
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Cache pnpm (for frontend/e2e)
        if: ${{ matrix.task != 'backend' }}
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-v8

      - name: Setup Python (for backend)
        if: ${{ matrix.task == 'backend' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip wheels (for backend)
        if: ${{ matrix.task == 'backend' }}
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-v2
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install frontend dependencies (with retry)
        if: ${{ matrix.task == 'frontend' || matrix.task == 'e2e' }}
        run: |
          for i in 1 2 3; do
            pnpm install --frozen-lockfile && break || (echo "‚ùå pnpm install failed, retrying..." && sleep 10)
          done

      - name: Install backend dependencies (with retry)
        if: ${{ matrix.task == 'backend' }}
        run: |
          python -m pip install --upgrade pip
          for i in 1 2 3; do
            pip install --prefer-binary -r requirements.txt && break || (echo "‚ùå pip install failed, retrying..." && sleep 10)
          done

      - name: Clean workspace caches
        run: |
          rm -rf dist coverage node_modules/.cache || true
          pnpm jest --clearCache || true

      - name: Run frontend coverage (force reporters)
        if: ${{ matrix.task == 'frontend' }}
        run: |
          pnpm jest --config jest.config.cjs --coverage --all \
            --coverageReporters=lcov --coverageReporters=text --coverageReporters=json-summary --coverageReporters=cobertura \
            --coverageDirectory=coverage/frontend
          echo ">>> Verifying frontend coverage files"
          mkdir -p coverage/frontend
          if [ ! -s coverage/frontend/lcov.info ]; then
            echo "‚ùå Missing frontend lcov.info"
            exit 1
          fi
          ls -lh coverage/frontend

      - name: Run backend coverage (Pytest with branch coverage + threshold)
        if: ${{ matrix.task == 'backend' }}
        run: |
          mkdir -p coverage/backend
          echo ">>> Running Pytest with coverage..."
          pytest backend/tests --maxfail=1 --disable-warnings -q \
            --cov=backend --cov=api --cov-branch \
            --cov-report=xml:coverage/backend/coverage.xml \
            --cov-report=lcov:coverage/backend/lcov.info \
            --cov-report=term-missing \
            --cov-fail-under=0
          echo ">>> Verifying backend coverage files"
          if [ ! -s coverage/backend/coverage.xml ]; then
            echo "‚ùå Missing backend coverage.xml"
            exit 1
          fi
          if [ ! -s coverage/backend/lcov.info ]; then
            echo "‚ùå Missing backend lcov.info"
            exit 1
          fi
          ls -lh coverage/backend

      - name: Run e2e coverage (Playwright)
        if: ${{ matrix.task == 'e2e' }}
        run: |
          mkdir -p coverage/e2e
          pnpm exec playwright install --with-deps
          NODE_ENV=test pnpm build
          pnpm exec playwright test --reporter=list || true
          if [ -s coverage/e2e/coverage-final.json ]; then
            npx nyc merge coverage/e2e coverage/e2e/coverage-merged.json || true
            npx nyc report --reporter=lcov --report-dir=coverage/e2e --temp-dir=coverage/e2e || true
          fi
          echo ">>> Verifying e2e coverage files"
          if [ ! -s coverage/e2e/lcov.info ]; then
            echo "‚ùå Missing e2e lcov.info"
            exit 1
          fi
          ls -lh coverage/e2e

      - name: Cache Playwright Browsers
        if: ${{ matrix.task == 'e2e' }}
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Upload coverage artifact (frontend)
        if: ${{ matrix.task == 'frontend' }}
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: coverage/frontend/**

      - name: Upload coverage artifact (backend)
        if: ${{ matrix.task == 'backend' }}
        uses: actions/upload-artifact@v4
        with:
          name: backend
          path: coverage/backend/**

      - name: Upload coverage artifact (e2e)
        if: ${{ matrix.task == 'e2e' }}
        uses: actions/upload-artifact@v4
        with:
          name: e2e
          path: coverage/e2e/**

      - name: Finalize logs for GitHub UI
        if: always()
        run: echo "‚úÖ Coverage job finished cleanly, logs should be downloadable."

  upload-codecov:
    needs: coverage
    runs-on: ubuntu-latest
    environment: websitos
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false
          clean: true

      - name: Debug artifacts before download
        run: gh run view ${{ github.run_id }} --log --json artifacts || true

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: coverage/frontend

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend
          path: coverage/backend

      - name: Download e2e coverage
        uses: actions/download-artifact@v4
        with:
          name: e2e
          path: coverage/e2e

      - name: Debug coverage file contents
        run: |
          echo "üìÇ Coverage/frontend:" && ls -lh coverage/frontend || true
          head -n 20 coverage/frontend/lcov.info || echo "‚ùå Missing frontend lcov.info"
          echo "üìÇ Coverage/backend:" && ls -lh coverage/backend || true
          head -n 20 coverage/backend/coverage.xml || echo "‚ùå Missing backend coverage.xml"
          echo "üìÇ Coverage/e2e:" && ls -lh coverage/e2e || true
          head -n 20 coverage/e2e/lcov.info || echo "‚ùå Missing e2e lcov.info"

      - name: Upload frontend coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ${{ github.workspace }}/coverage/frontend/lcov.info
          flags: frontend
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          override_commit: ${{ github.sha }}
          override_branch: ${{ github.ref_name }}
          fail_ci_if_error: false
          verbose: true

      - name: Upload backend coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: |
            ${{ github.workspace }}/coverage/backend/coverage.xml
            ${{ github.workspace }}/coverage/backend/lcov.info
          flags: backend
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          override_commit: ${{ github.sha }}
          override_branch: ${{ github.ref_name }}
          fail_ci_if_error: false
          verbose: true

      - name: Upload e2e coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ${{ github.workspace }}/coverage/e2e/lcov.info
          flags: e2e
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          override_commit: ${{ github.sha }}
          override_branch: ${{ github.ref_name }}
          fail_ci_if_error: false
          verbose: true

      - name: Merge coverage fallback
        run: |
          pnpm add -g nyc || true
          npx nyc merge coverage coverage/coverage-final.json || true
          npx nyc report --reporter=lcov --report-dir=coverage || true
          ls -lh coverage || true

      - name: Upload merged fallback coverage
        if: ${{ hashFiles('coverage/lcov.info') != '' }}
        uses: codecov/codecov-action@v3
        with:
          files: ${{ github.workspace }}/coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          override_commit: ${{ github.sha }}
          override_branch: ${{ github.ref_name }}
          fail_ci_if_error: false
          verbose: true