name: Coverage Checks

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: true
      matrix:
        task: [frontend, backend, e2e]
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Enable problem matchers
        run: |
          echo "::add-matcher::.github/matchers/error.json"
          echo "::add-matcher::.github/matchers/python.json"
          echo "::add-matcher::.github/matchers/ts.json"

      - name: Setup Node.js (for frontend/e2e)
        if: ${{ matrix.task != 'backend' }}
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Setup pnpm (for frontend/e2e)
        if: ${{ matrix.task != 'backend' }}
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Cache pnpm (for frontend/e2e)
        if: ${{ matrix.task != 'backend' }}
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-v3

      - name: Setup Python (for backend)
        if: ${{ matrix.task == 'backend' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip wheels (for backend)
        if: ${{ matrix.task == 'backend' }}
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-v2
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install frontend dependencies
        if: ${{ matrix.task == 'frontend' || matrix.task == 'e2e' }}
        run: pnpm install --frozen-lockfile

      - name: Install backend dependencies
        if: ${{ matrix.task == 'backend' }}
        run: |
          python -m pip install --upgrade pip
          echo ">>> Installing backend dependencies"
          pip install --prefer-binary -r requirements.txt || pip install -r requirements.txt

      - name: Run frontend coverage (Jest)
        if: ${{ matrix.task == 'frontend' }}
        run: |
          pnpm test:ci
          echo ">>> Checking coverage/frontend before artifact upload"
          ls -lh coverage/frontend || echo "❌ No coverage for frontend"
          head -n 20 coverage/frontend/lcov.info || echo "❌ Missing frontend coverage file"

      - name: Run backend coverage (Pytest)
        if: ${{ matrix.task == 'backend' }}
        run: |
          echo ">>> Running Pytest with coverage"
          pytest --cov=backend --cov=api \
            --cov-report=xml:coverage/backend/coverage.xml \
            --cov-report=term-missing || EXIT=$?
          echo ">>> Pytest finished with exit code ${EXIT:-0}"
          echo ">>> Checking coverage/backend before artifact upload"
          ls -lh coverage/backend || echo "❌ No coverage for backend"
          wc -l coverage/backend/coverage.xml || echo "❌ Missing backend coverage.xml"
          head -n 40 coverage/backend/coverage.xml || echo "❌ Empty backend XML"
          exit ${EXIT:-0}

      - name: Run e2e coverage (Playwright)
        if: ${{ matrix.task == 'e2e' }}
        run: |
          mkdir -p coverage/e2e
          pnpm exec playwright install --with-deps
          echo ">>> Building frontend with coverage instrumentation"
          NODE_ENV=test pnpm build
          echo ">>> Running Playwright tests with browser coverage"
          pnpm exec playwright test --reporter=list || EXIT=$?
          if [ -s coverage/e2e/coverage-final.json ]; then
            echo ">>> Merging E2E browser coverage into LCOV"
            npx nyc merge coverage/e2e coverage/e2e/coverage-merged.json || true
            npx nyc report --reporter=lcov --report-dir=coverage/e2e --temp-dir=coverage/e2e || true
          else
            echo "⚠️ E2E coverage is empty – skipping merge"
            rm -f coverage/e2e/lcov.info || true
          fi
          echo ">>> Playwright finished with exit code ${EXIT:-0}"
          echo ">>> Checking coverage/e2e before artifact upload"
          ls -lh coverage/e2e || echo "❌ No coverage for e2e"
          exit ${EXIT:-0}

      - name: Upload coverage artifact (frontend)
        if: ${{ matrix.task == 'frontend' }}
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: coverage/frontend/lcov.info

      - name: Upload coverage artifact (backend)
        if: ${{ matrix.task == 'backend' }}
        uses: actions/upload-artifact@v4
        with:
          name: backend
          path: coverage/backend/coverage.xml

      - name: Upload coverage artifact (e2e)
        if: ${{ matrix.task == 'e2e' }}
        uses: actions/upload-artifact@v4
        with:
          name: e2e
          path: coverage/e2e/**

  upload-codecov:
    needs: coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: coverage/frontend

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend
          path: coverage/backend

      - name: Download e2e coverage (optional)
        uses: actions/download-artifact@v4
        with:
          name: e2e
          path: coverage/e2e
        continue-on-error: true

      - name: Remove empty coverage files
        run: |
          echo ">>> Removing empty coverage files before upload"
          find coverage -type f -size 0 -print -delete || true

      - name: Debug coverage file contents
        run: |
          echo "📂 Coverage/frontend:" && ls -lh coverage/frontend || true
          head -n 20 coverage/frontend/lcov.info || echo "❌ Missing frontend coverage"
          echo "📂 Coverage/backend:" && ls -lh coverage/backend || true
          head -n 20 coverage/backend/coverage.xml || echo "❌ Missing backend coverage"
          echo "📂 Coverage/e2e:" && ls -lh coverage/e2e || true
          head -n 20 coverage/e2e/lcov.info || echo "❌ Missing e2e coverage"

      - name: Upload frontend coverage to Codecov (LCOV only)
        uses: codecov/codecov-action@v3
        with:
          files: ${{ github.workspace }}/coverage/frontend/lcov.info
          flags: frontend
          slug: ${{ github.repository }}
          override_commit: ${{ github.sha }}
          override_branch: ${{ github.ref_name }}
          commit_parent: ${{ github.sha }}
          fail_ci_if_error: false
          verbose: true

      - name: Upload backend coverage to Codecov (XML only)
        uses: codecov/codecov-action@v3
        with:
          files: ${{ github.workspace }}/coverage/backend/coverage.xml
          flags: backend
          slug: ${{ github.repository }}
          override_commit: ${{ github.sha }}
          override_branch: ${{ github.ref_name }}
          commit_parent: ${{ github.sha }}
          fail_ci_if_error: false
          verbose: true

      - name: Upload e2e coverage to Codecov (if exists)
        if: ${{ hashFiles('coverage/e2e/lcov.info') != '' }}
        uses: codecov/codecov-action@v3
        with:
          files: ${{ github.workspace }}/coverage/e2e/lcov.info
          flags: e2e
          slug: ${{ github.repository }}
          override_commit: ${{ github.sha }}
          override_branch: ${{ github.ref_name }}
          commit_parent: ${{ github.sha }}
          fail_ci_if_error: false
          verbose: true

      - name: Merge coverage fallback
        run: |
          echo ">>> Merging all coverage into one report as fallback"
          npx nyc merge coverage coverage/coverage-final.json || true
          npx nyc report --reporter=lcov --report-dir=coverage || true
          ls -lh coverage || true

      - name: Upload merged fallback coverage
        uses: codecov/codecov-action@v3
        with:
          files: ${{ github.workspace }}/coverage/lcov.info
          flags: all
          slug: ${{ github.repository }}
          override_commit: ${{ github.sha }}
          override_branch: ${{ github.ref_name }}
          commit_parent: ${{ github.sha }}
          fail_ci_if_error: false
          verbose: true