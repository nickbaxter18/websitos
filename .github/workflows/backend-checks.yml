name: Backend Checks

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task: [black, mypy, pytest, flake8]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest-json-report flake8 mypy black

      - name: Run Pytest
        if: ${{ matrix.task == 'pytest' }}
        run: |
          pytest --maxfail=1 --disable-warnings -q --json-report --json-report-file=pytest-output.json || true
          python scripts/convert_pytest.py pytest-output.json pytest-report.json || echo '{"workflow":"backend-checks","job":"pytest","status":"success","errors":[],"warnings":[],"notices":[]}' > pytest-report.json
          mkdir -p summaries && mv pytest-report.json summaries/

      - name: Run Mypy
        if: ${{ matrix.task == 'mypy' }}
        run: |
          mypy . > mypy-output.txt 2>&1 || true
          python scripts/convert_mypy.py mypy-output.txt mypy-report.json || echo '{"workflow":"backend-checks","job":"mypy","status":"success","errors":[],"warnings":[],"notices":[]}' > mypy-report.json
          mkdir -p summaries && mv mypy-report.json summaries/

      - name: Run Flake8
        if: ${{ matrix.task == 'flake8' }}
        run: |
          flake8 . > flake8-output.txt 2>&1 || true
          python scripts/convert_flake8.py flake8-output.txt flake8-report.json || echo '{"workflow":"backend-checks","job":"flake8","status":"success","errors":[],"warnings":[],"notices":[]}' > flake8-report.json
          mkdir -p summaries && mv flake8-report.json summaries/

      - name: Run Black
        if: ${{ matrix.task == 'black' }}
        run: |
          black --check . > black-output.txt 2>&1 || true
          python scripts/convert_black.py black-output.txt black-report.json || echo '{"workflow":"backend-checks","job":"black","status":"success","errors":[],"warnings":[],"notices":[]}' > black-report.json
          mkdir -p summaries && mv black-report.json summaries/

      - name: Upload backend summaries
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-summaries
          path: summaries/
          retention-days: 2

  call-diagnostics:
    needs: checks
    uses: ./.github/workflows/ci-diagnostics.yml
    secrets: inherit