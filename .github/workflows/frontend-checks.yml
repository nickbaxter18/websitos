name: Frontend Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  checks:
    name: ${{ matrix.task }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [lint, prettier, type-check, test:unit, test:e2e]
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Cache pnpm
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        if: ${{ matrix.task == 'lint' }}
        continue-on-error: true
        run: |
          pnpm exec eslint src v2 ops --format json --output-file eslint-output.json || true
          node scripts/convert-eslint.js eslint-output.json eslint-report.json || echo '{"workflow":"frontend-checks","job":"lint","status":"success","errors":[],"warnings":[],"notices":[]}' > eslint-report.json
          mkdir -p summaries && mv eslint-report.json summaries/

      - name: Run Prettier
        if: ${{ matrix.task == 'prettier' }}
        continue-on-error: true
        run: |
          pnpm exec prettier --check . > prettier-output.txt 2>&1 || true
          node scripts/convert-prettier.js prettier-output.txt prettier-report.json || echo '{"workflow":"frontend-checks","job":"prettier","status":"success","errors":[],"warnings":[],"notices":[]}' > prettier-report.json
          mkdir -p summaries && mv prettier-report.json summaries/

      - name: Run TypeScript type-check
        if: ${{ matrix.task == 'type-check' }}
        run: |
          pnpm exec tsc -p tsconfig.ci.json --noEmit --skipLibCheck > tsc-output.txt 2>&1 || true
          node scripts/convert-tsc.js tsc-output.txt tsc-report.json || echo '{"workflow":"frontend-checks","job":"tsc","status":"success","errors":[],"warnings":[],"notices":[]}' > tsc-report.json
          mkdir -p summaries && mv tsc-report.json summaries/

      - name: Run Jest unit tests
        if: ${{ matrix.task == 'test:unit' }}
        run: |
          pnpm exec jest --coverage --json --outputFile=jest-output.json || true
          node scripts/convert-jest.js jest-output.json jest-report.json || echo '{"workflow":"frontend-checks","job":"jest-unit","status":"success","errors":[],"warnings":[],"notices":[]}' > jest-report.json
          mkdir -p summaries && mv jest-report.json summaries/

      - name: Install Playwright Browsers
        if: ${{ matrix.task == 'test:e2e' }}
        run: pnpm exec playwright install --with-deps

      - name: Run Playwright E2E tests with coverage
        if: ${{ matrix.task == 'test:e2e' }}
        run: |
          pnpm exec nyc --reporter=lcov --report-dir=coverage/e2e pnpm exec playwright test || true
          node scripts/convert-jest-coverage.js coverage/e2e/coverage-summary.json playwright-coverage-report.json || echo '{"workflow":"frontend-checks","job":"playwright-e2e","status":"success","errors":[],"warnings":[],"notices":[]}' > playwright-coverage-report.json
          mkdir -p summaries && mv playwright-coverage-report.json summaries/

      - name: Upload frontend summaries
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-summaries
          path: summaries/
          retention-days: 2

  call-diagnostics:
    needs: checks
    uses: ./.github/workflows/ci-diagnostics.yml
    secrets: inherit