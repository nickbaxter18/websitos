name: Frontend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'v2/**'
      - 'package.json'
      - 'vite.config.js'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'v2/**'
      - 'package.json'
      - 'vite.config.js'
      - '.github/workflows/frontend-ci.yml'
  workflow_dispatch:

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        task: [lint, type-check, test:unit, prettier]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Enable problem matchers
        run: |
          echo "::add-matcher::.github/matchers/error.json"
          echo "::add-matcher::.github/matchers/eslint.json"
          echo "::add-matcher::.github/matchers/ts.json"

      - name: Install dependencies (npm ci)
        run: npm ci

      - name: Run ${{ matrix.task }}
        run: |
          echo "::group::ðŸ”Ž Running task: ${{ matrix.task }}"
          if [ "${{ matrix.task }}" == "test:unit" ]; then
            echo "âš¡ Running Jest with annotations..."
            npm run test:unit -- --runInBand --verbose --reporters=default --reporters=jest-github-actions-reporter || EXIT=$?
            echo "--- Jest report ---"
            cat jest-report.json || echo "(no jest-report.json produced)"
            exit ${EXIT:-0}
          elif [ "${{ matrix.task }}" == "lint" ]; then
            echo "âš¡ Running ESLint with GitHub annotations..."
            npm run lint -- --format github || EXIT=$?
            exit ${EXIT:-0}
          elif [ "${{ matrix.task }}" == "type-check" ]; then
            echo "âš¡ Running TypeScript with GitHub annotations..."
            npx tsc --noEmit --pretty false || EXIT=$?
            exit ${EXIT:-0}
          elif [ "${{ matrix.task }}" == "prettier" ]; then
            echo "âš¡ Checking Prettier formatting..."
            npx prettier --check . | sed 's/^/::warning::/' || true
          fi
          echo "::endgroup::"
        continue-on-error: ${{ matrix.task == 'lint' || matrix.task == 'prettier' }}

  build:
    runs-on: ubuntu-latest
    needs: checks
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies (npm ci)
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Upload frontend artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-artifacts
          path: |
            coverage/lcov.info
            coverage/coverage-summary.json
            jest-report.json
          retention-days: 7

  e2e:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies (npm ci)
        run: npm ci

      - name: Run Playwright tests
        run: npm run test:e2e

  capture-failure:
    if: failure()
    needs: [build, e2e]
    uses: ./.github/workflows/failure-summary.yml
    with:
      job_name: frontend
      step_name: build