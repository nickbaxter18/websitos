name: CI Preflight

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies (frontend)
        run: npm install

      - name: Install dependencies (backend)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true

      - name: Install extra tools (jq, gh, linters, pytest)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh
          pip install mypy black pytest

      - name: Lint Check
        run: |
          npm run lint > lint-results.txt 2>&1 || true
          npm run format:check >> lint-results.txt 2>&1 || true
        continue-on-error: true
      - name: Upload Lint Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-results
          path: lint-results.txt

      - name: TypeScript Type Check
        run: npm run type-check > ts-results.txt 2>&1 || true
        continue-on-error: true
      - name: Upload TS Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ts-results
          path: ts-results.txt

      - name: Python Static Checks
        run: |
          mypy . > python-results.txt 2>&1 || true
          black --check . >> python-results.txt 2>&1 || true
        continue-on-error: true
      - name: Upload Python Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-results
          path: python-results.txt

      - name: Jest Test Discovery
        run: npm run test -- --listTests > jest-results.txt 2>&1 || true
        continue-on-error: true
      - name: Upload Jest Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jest-results
          path: jest-results.txt

      - name: Pytest Discovery
        run: pytest --collect-only > pytest-results.txt 2>&1 || true
        continue-on-error: true
      - name: Upload Pytest Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: pytest-results.txt

      - name: Build Compact Diagnostics Report
        if: always()
        run: |
          mkdir -p artifacts
          echo '{' > artifacts/diagnostics.json
          echo '  "lint_errors": ' $(grep -c "error" lint-results.txt || echo 0) ',' >> artifacts/diagnostics.json
          echo '  "ts_errors": ' $(grep -c "error" ts-results.txt || echo 0) ',' >> artifacts/diagnostics.json
          echo '  "python_errors": ' $(grep -c "error" python-results.txt || echo 0) ',' >> artifacts/diagnostics.json
          echo '  "jest_failures": ' $(grep -c -i "FAIL" jest-results.txt || echo 0) ',' >> artifacts/diagnostics.json
          echo '  "pytest_failures": ' $(grep -c "FAILED" pytest-results.txt || echo 0) >> artifacts/diagnostics.json
          echo '}' >> artifacts/diagnostics.json

      - name: Upload Diagnostics JSON
        uses: actions/upload-artifact@v4
        with:
          name: preflight-diagnostics
          path: artifacts/diagnostics.json

      - name: List workflow run artifacts
        if: always()
        run: |
          echo "Fetching artifacts for this run..."
          gh run list --workflow ci-preflight.yml --limit 1 --json databaseId,status,conclusion
          gh run download --name preflight-diagnostics || true