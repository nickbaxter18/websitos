name: Preflight Checks

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'api/**'
      - '.github/workflows/ci-preflight.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'api/**'
      - '.github/workflows/ci-preflight.yml'
  workflow_dispatch:

jobs:
  preflight:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: true
      matrix:
        task: [lint, type-check, jest, pytest]
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js (for JS tasks)
        if: matrix.task == 'lint' || matrix.task == 'type-check' || matrix.task == 'jest'
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Setup Python (for pytest)
        if: matrix.task == 'pytest'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install JS dependencies
        if: matrix.task == 'lint' || matrix.task == 'type-check' || matrix.task == 'jest'
        run: npm ci || echo "No package.json found"

      - name: Install Python dependencies
        if: matrix.task == 'pytest'
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Enable problem matchers
        uses: ./.github/actions/setup-matchers

      - name: Run lint
        if: matrix.task == 'lint'
        run: npm run lint || echo "No lint script" > lint-results.txt

      - name: Run type-check
        if: matrix.task == 'type-check'
        run: npm run type-check || echo "No type-check script" > ts-results.txt

      - name: Run JS tests
        if: matrix.task == 'jest'
        run: npm test || echo "No JS tests" > jest-results.txt

      - name: Run Python tests
        if: matrix.task == 'pytest'
        run: pytest || echo "No Python tests" > pytest-results.txt

      - name: Upload results artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: preflight-${{ matrix.task }}-results
          path: |
            lint-results.txt
            ts-results.txt
            jest-results.txt
            pytest-results.txt
          retention-days: 3